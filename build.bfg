# -*- python -*-

bfg9000_required_version('>=0.7.0')
project('caliber', version='0.1-dev', intermediate_dirs=False)

global_options([opts.std(argv.std)], lang='c++')

boost = package('boost', ['program_options', 'iostreams'] + (
    ['filesystem', 'system'] if argv.boost_filesystem else []
), version='>=1.55')

libmettle = package('mettle')
mettle = test_driver(
    ['mettle', '--output=verbose'],
    environment={'TEST_DATA': directory('test/test-data')},
)

caliber_objs = object_files(
    files=find_files('src/**/*.cpp', extra='*.hpp', filter=filter_by_platform),
    packages=[libmettle, boost],
    options=([opts.define('CALIBER_BOOST_FILESYSTEM')] if argv.boost_filesystem
             else [])
)
caliber = executable(
    'caliber',
    files=caliber_objs,
    packages=[libmettle, boost]
)

install(caliber)

extra_files = {
    'test/test_compiler.cpp': (
        ['src/compiler.cpp'] +
        find_paths('src/*/subprocess.cpp', filter=filter_by_platform)
    ),
}

driver = test_driver(caliber, parent=mettle)

for src in find_paths('test/*.cpp', extra='*.hpp'):
    test(executable(
        src.stripext().suffix,
        files=[src] + [caliber_objs[i] for i in
                       extra_files.get(src.suffix, [])],
        packages=[boost, libmettle],
    ), driver=mettle)

for src in find_files('test/compilation/*.cpp'):
    test(src, driver=driver)

extra_dist(files=['README.md', 'LICENSE'])
