language: cpp
dist: xenial

env:
  global:
    - COMMONFLAGS="-Wall -Wextra -pedantic -Werror"
    - PYTHON=python
    - PIP=pip

addons:
  apt:
    sources: &sources
      - ubuntu-toolchain-r-test
    packages: &packages
      - libboost-dev
      - libboost-iostreams-dev
      - libboost-program-options-dev
      - libstdc++-7-dev
      - ninja-build
      - python-virtualenv

cache:
  apt: true

matrix:
  include:

    # Clang builds

    # Skipping clang 5.0 since it doesn't install properly under Xenial.

    - compiler: clang
      env: COMPILER=clang++-6.0
      addons:
        apt:
          sources:
            - *sources
            - llvm-toolchain-xenial-6.0
          packages:
            - *packages
            - clang-6.0

    - compiler: clang
      env: COMPILER=clang++-7
      addons:
        apt:
          sources:
            - *sources
            - llvm-toolchain-xenial-7
          packages:
            - *packages
            - clang-7

    - compiler: clang
      env: COMPILER=clang++-8
      addons:
        apt:
          sources:
            - *sources
            - llvm-toolchain-xenial-8
          packages:
            - *packages
            - clang-8

    - compiler: clang
      env: COMPILER=clang++-9
      addons: &clang-9
        apt:
          sources: &clang-9-sources
            - *sources
            - sourceline: 'deb https://apt.llvm.org/xenial/ llvm-toolchain-xenial-9 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
          packages:
            - *packages
            - clang-9

    # GCC builds

    - compiler: gcc
      env: COMPILER=g++-7 EXTRAFLAGS=-Wsuggest-override
      addons:
        apt:
          sources: *sources
          packages:
            - *packages
            - g++-7

    - compiler: gcc
      env: COMPILER=g++-8 EXTRAFLAGS=-Wsuggest-override
      addons:
        apt:
          sources: *sources
          packages:
            - *packages
            - g++-8

    - compiler: gcc
      env: COMPILER=g++-9 EXTRAFLAGS=-Wsuggest-override
      addons: &gcc-9
        apt:
          sources: *sources
          packages:
            - *packages
            - g++-9

    # macOS builds

    - os: osx
      osx_image: xcode10.3
      env: PYTHON=python2 PIP=pip2 COMPILER=clang++

    # C++20 builds

    - compiler: clang
      env: EXTRAOPTS="--std=c++2a" COMPILER=clang++-9
      addons: *clang-9

    - compiler: gcc
      env: >
        EXTRAOPTS="--std=c++2a" COMPILER=g++-9 EXTRAFLAGS=-Wsuggest-override
      addons: *gcc-9

before_install:
  - |
    if [ "${TRAVIS_OS_NAME}" = "osx" ]; then
      shell_session_update() { :; }
      brew update
      brew install ninja
    else
      set -e
      virtualenv env --python=${PYTHON} && source env/bin/activate
    fi
  - ${PIP} install bfg9000
install:
  - export CXX=${COMPILER}
  # Build and install the lastest master revision of mettle.
  - git clone https://github.com/jimporter/mettle.git
  - pushd mettle
  - 9k build --backend=ninja --prefix=${HOME} --vendorize
  - cd build
  - ninja install
  - popd
  - export CPATH=${HOME}/include PKG_CONFIG_PATH=${HOME}/lib/pkgconfig
  - ls ${HOME}/include
script:
  - >
    CXXFLAGS="${COMMONFLAGS} ${EXTRAFLAGS}"
    9k build --backend=ninja ${EXTRAOPTS}
  - cd build
  - ninja test
